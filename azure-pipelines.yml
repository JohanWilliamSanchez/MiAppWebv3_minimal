# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: test
  demands:
  - agent.name -equals devops

steps:

- script: |
    echo Hello, world in new Agent!
    ls /tmp/pruebadocker/
- task: JavaToolInstaller@0
  inputs:
    versionSpec: "11"
    jdkArchitectureOption: x64
    jdkSourceOption: LocalDirectory
    jdkFile: "/tmp/pruebadocker/openlogic-openjdk-jre-11.0.20+8-linux-x64.tar.gz"
    cleanDestinationDirectory: true
    
- checkout: self

- script: |
    pwd
    dotnet --version
    java -version
    echo $JAVA_HOME
    echo $PATH
- script: |
    dotnet-sonarscanner begin /k:"MiAppWebv3_minimal" /d:sonar.host.url="http://192.168.156.20:5155/" /d:sonar.token="$(TOKEN_SONAR)" 
  displayName: 'Sonarqube Begin'
- script: |
    ls -ltr
    pwd
    dotnet build
  displayName: 'Build'
- script: | 
    export JAVA_HOME="/tmp/pruebadocker/openlogic-openjdk-jre-11.0.20+8-linux-x64"
    java -version
    dotnet-sonarscanner end /d:sonar.token="$(TOKEN_SONAR)"
  displayName: 'Sonarqube End'

